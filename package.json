{
  "private": false,
  "name": "eslint-config-strict-mode",
  "version": "1.0.27",
  "description": "ESLint configuration for linting TS, JS, JSON, YAML, and TOML",
  "license": "MIT",
  "author": "Brian Zalewski <brian@megabyte.space> (https://megabyte.space)",
  "homepage": "https://megabyte.space",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ProfessorManhattan/eslint-config-strict-mode.git"
  },
  "bugs": {
    "email": "help@megabyte.space",
    "url": "https://gitlab.com/megabyte-labs/npm/configs/eslint/-/issues"
  },
  "type": "commonjs",
  "main": "dist/main.js",
  "files": [
    "dist"
  ],
  "scripts": {
    "build": "tsc -p tsconfig.json",
    "help": "task --list",
    "prepare": "task common:husky",
    "repair": "bash <(curl -sS https://install.doctor/repair)",
    "start": "bash .config/start.sh",
    "test": "npm run build && standard-version && npm publish && npm install --save-dev ${npm_package_name}"
  },
  "config": {
    "commitizen": {
      "path": "node_modules/cz-emoji-conventional"
    }
  },
  "typings": "dist/main.d.ts",
  "dependencies": {
    "@typescript-eslint/eslint-plugin": "^5.2.0",
    "@typescript-eslint/parser": "^5.2.0",
    "eslint": "^8.1.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-formatter-git-log": "^0.5.3",
    "eslint-formatter-gitlab": "^3.0.0",
    "eslint-formatter-pretty": "^4.1.0",
    "eslint-formatter-summary": "^1.1.0",
    "eslint-plugin-angular": "^4.1.0",
    "eslint-plugin-array-func": "^3.1.7",
    "eslint-plugin-editorconfig": "^3.0.2",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-etc": "^2.0.0",
    "eslint-plugin-ext": "^0.1.0",
    "eslint-plugin-filenames": "^1.3.2",
    "eslint-plugin-fp": "^2.3.0",
    "eslint-plugin-functional": "^4.0.2",
    "eslint-plugin-html": "^6.2.0",
    "eslint-plugin-import": "^2.24.2",
    "eslint-plugin-jest": "^25.2.2",
    "eslint-plugin-jest-async": "^1.0.3",
    "eslint-plugin-jest-dom": "^3.9.2",
    "eslint-plugin-jest-formatting": "^3.0.0",
    "eslint-plugin-jsdoc": "^37.0.3",
    "eslint-plugin-json-schema-validator": "^1.2.44",
    "eslint-plugin-jsonc": "^1.6.0",
    "eslint-plugin-no-constructor-bind": "^2.0.4",
    "eslint-plugin-no-explicit-type-exports": "^0.12.1",
    "eslint-plugin-no-secrets": "^0.8.9",
    "eslint-plugin-no-unsanitized": "^3.2.0",
    "eslint-plugin-no-use-extend-native": "^0.5.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-optimize-regex": "^1.2.1",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-promise": "^5.1.0",
    "eslint-plugin-regexp": "^1.1.0",
    "eslint-plugin-rxjs": "^4.0.1",
    "eslint-plugin-security": "^1.4.0",
    "eslint-plugin-sonarjs": "^0.10.0",
    "eslint-plugin-sort-class-members": "^1.13.0",
    "eslint-plugin-sort-keys-fix": "^1.1.2",
    "eslint-plugin-switch-case": "^1.1.2",
    "eslint-plugin-toml": "^0.2.0",
    "eslint-plugin-tsdoc": "^0.2.14",
    "eslint-plugin-typescript-sort-keys": "^2.0.0",
    "eslint-plugin-unicorn": "^37.0.1",
    "eslint-plugin-unused-imports": "^1.1.5",
    "eslint-plugin-woke": "^1.0.0",
    "eslint-plugin-yml": "^0.10.1",
    "glob": "^7.2.0",
    "parse-gitignore": "^1.0.1",
    "tslib": "^2.3.1",
    "tslint": "^6.1.3",
    "yaml": "^1.10.2"
  },
  "devDependencies": {
    "@megabytelabs/jest-preset": "^1.0.0",
    "@types/glob": "^7.2.0",
    "@types/node": "^16.11.6",
    "@types/parse-gitignore": "^1.0.0",
    "@washingtondc/development": "^1.0.2",
    "@washingtondc/eslint": "^1.0.1",
    "@washingtondc/prettier": "^1.0.0",
    "@washingtondc/release": "^0.0.2",
    "esbuild": "^0.12.29",
    "esbuild-node-externals": "^1.3.0",
    "eslint-config-strict-mode": "^1.0.0",
    "semantic-release-config": "^0.0.2",
    "sleekfast": "^0.0.1",
    "typescript": "^4.4.4"
  },
  "keywords": [
    "config",
    "editorconfig",
    "eslint",
    "eslint-config",
    "formatter",
    "javascript",
    "lint",
    "linter",
    "mblabs",
    "megabytelabs",
    "prettier",
    "professormanhattan",
    "schema",
    "toml",
    "tsdoc",
    "typescript",
    "washingtondc",
    "yaml"
  ],
  "engines": {
    "node": ">=14.18.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "blueprint": {
    "customPackageName": "eslint-config-strict-mode",
    "description": "ESLint configuration for linting TS, JS, JSON, YAML, and TOML",
    "github_id": "R_kgDOGuY01w",
    "gitlab_group_id": "12165875",
    "gitlab_project_id": "30830469",
    "group": "npm",
    "name": "Strict ESLint Config",
    "overview": "This [ESLint](https://eslint.org/) configuration package includes basically every quality ESLint plugin available. The default settings are meant to enforce strict design patterns among developers who code with TypeScript and JavaScript. It also includes linting rules for JSON, YAML, and TOML. Most of the rules include auto-fix functionality and it even sorts JSON and YAML. You can use this configuration as is or customize it to your liking so you can have your own shared ESLint configuration package!",
    "repository": {
      "github": "https://github.com/ProfessorManhattan/eslint-config-strict-mode",
      "gitlab": "https://gitlab.com/megabyte-labs/npm/configs/eslint"
    },
    "slug": "eslint-config-strict-mode",
    "subgroup": "config",
    "subheader_description": "A strict ESLint configuration that includes all the best ESLint plugins for linting TypeScript, JavaScript, JSON, YAML, and TOML",
    "title": "A Strict, Awesome ESLint Config"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ],
    "helpUrl": "https://megabyte.space/docs/contributing/commits"
  },
  "eslintConfig": {
    "extends": "eslint-config-strict-mode",
    "rules": {
      "import/no-extraneous-dependencies": "warn",
      "max-len": "warn",
      "max-lines": "warn"
    }
  },
  "funding": [
    {
      "type": "opencollective",
      "url": "https://opencollective.com/megabytelabs"
    },
    {
      "type": "patreon",
      "url": "https://www.patreon.com/ProfessorManhattan"
    }
  ],
  "jest": {
    "preset": "@megabytelabs/jest-preset",
    "reporters": [
      "default",
      [
        "jest-html-reporters",
        {
          "filename": "index.html",
          "logoImgPath": "./.config/assets/logo-jest-report.png",
          "openReport": true,
          "pageTitle": "Code Coverage Report",
          "publicPath": "./coverage"
        }
      ]
    ]
  },
  "lint-staged": {
    "**/!(logo).(jpg|png)": [
      "task image:compress --"
    ],
    "**/*": [
      "task lint:any --"
    ],
    "**/*.(css|html|less|md|mjml|php|scss|sh|xml)": [
      "task fix:prettier --"
    ],
    "**/*.(js|jsx|ts|tsx)": [
      "task fix:js --",
      "task lint:js --"
    ],
    "**/*.json": [
      "task fix:json --"
    ],
    "**/*.sh": [
      "task lint:shell --"
    ],
    "**/*.toml": [
      "task lint:toml --"
    ],
    "**/*.xml": [
      "task fix:xml --",
      "task lint:xml --"
    ],
    "**/*.yml": [
      "task fix:yaml --",
      "task lint:yaml --"
    ],
    "logo.png": [
      "task image:resize -- 200 200",
      "task image:compress --"
    ]
  },
  "nodemonConfig": {
    "exec": "tsc -p . && node --inspect-brk dist/main",
    "ext": "js,jsx,json,ts,tsx,yml",
    "ignore": [
      "src/**/*.spec.ts"
    ],
    "watch": [
      ".env",
      "src"
    ]
  },
  "ntl": {
    "descriptions": {
      "help": "Display a list of tasks that can be run via the Taskfile.yml",
      "prepare": "Hook, triggered by running npm install, that runs logic such as installing pre-commit hooks",
      "repair": "Fixes basic issues in projects that are having trouble running basic commands like 'task start'",
      "start": "Entrypoint for new developers that installs requirements and then runs 'task start'"
    }
  },
  "prettier": "@washingtondc/prettier",
  "release": {
    "branches": [
      "main",
      "master",
      "next",
      {
        "name": "beta",
        "prerelease": true
      },
      {
        "name": "alpha",
        "prerelease": true
      }
    ],
    "extends": "semantic-release-config"
  }
}
